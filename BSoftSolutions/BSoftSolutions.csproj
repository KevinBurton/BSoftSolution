<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <DockerComposeProjectPath>../docker-compose.dcproj</DockerComposeProjectPath>
    <UserSecretsId>74872ebd-dd81-4838-8efa-c5ac8dc70d94</UserSecretsId>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.0.0" />
    <PackageReference Include="MongoDB.Driver" Version="2.9.2" />
    <PackageReference Include="Neo4j.Driver" Version="1.7.2" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    <None Remove="ClientApp\src\app\shared\tamugeocode.ts" />
    <None Remove="ClientApp\src\app\shared\tamuaddress.ts" />
    <None Remove="ClientApp\src\app\shared\tamuoutputgeocode.ts" />
    <None Remove="ClientApp\src\app\shared\movie.service.ts" />
    <None Remove="ClientApp\src\app\movie\movie-list\movie-list.component.spec.ts" />
    <None Remove="ClientApp\src\app\models\tamuaddress.ts" />
    <None Remove="ClientApp\src\app\models\tamugeocode.ts" />
    <None Remove="ClientApp\src\app\models\tamuoutputgeocode.ts" />
    <None Remove="ClientApp\src\app\services\movie.service.ts" />
    <None Remove="ClientApp\src\app\models\Theater.ts" />
    <None Remove="ClientApp\src\app\models\Movie.ts" />
    <None Remove="ClientApp\src\app\models\coordinate.ts" />
    <None Remove="ClientApp\src\app\movie\movie.module.ts" />
    <None Remove="ClientApp\src\app\app.component.html" />
    <None Remove="ClientApp\src\app\app.component.ts" />
    <None Remove="ClientApp\src\app\app.module.ts" />
    <None Remove="ClientApp\src\app\app.server.module.ts" />
    <None Remove="ClientApp\src\app\app-route.module.ts" />
    <None Remove="ClientApp\src\test.ts" />
    <None Remove="ClientApp\src\styles.css" />
    <None Remove="ClientApp\src\polyfills.ts" />
    <None Remove="ClientApp\src\main.ts" />
    <None Remove="ClientApp\src\karma.conf.js" />
    <None Remove="ClientApp\src\index.html" />
    <None Remove="ClientApp\src\environments\environment.ts" />
    <None Remove="ClientApp\src\assets\.gitkeep" />
    <None Remove="ClientApp\browserslist" />
    <None Remove="ClientApp\README.md" />
    <None Remove="ClientApp\.gitignore" />
    <None Remove="ClientApp\.editorconfig" />
    <None Remove="ClientApp\src\app\shared\shared.module.ts" />
    <None Remove="ClientApp\src\app\resume\resume.component.css" />
    <None Remove="ClientApp\src\app\resume\resume.component.html" />
    <None Remove="ClientApp\src\app\resume\resume.component.ts" />
    <None Remove="ClientApp\src\app\page-not-found\page-not-found.component.css" />
    <None Remove="ClientApp\src\app\page-not-found\page-not-found.component.html" />
    <None Remove="ClientApp\src\app\page-not-found\page-not-found.component.ts" />
    <None Remove="ClientApp\src\app\nav-menu\nav-menu.component.css" />
    <None Remove="ClientApp\src\app\nav-menu\nav-menu.component.html" />
    <None Remove="ClientApp\src\app\nav-menu\nav-menu.component.ts" />
    <None Remove="ClientApp\src\app\movie\containers\movie\movie.component.ts" />
    <None Remove="ClientApp\src\app\movie\components\movie-list\movie-list.component.ts" />
    <None Remove="ClientApp\src\app\.gitignore" />
    <None Remove="ClientApp\src\app\home\home.component.html" />
    <None Remove="ClientApp\src\app\home\home.component.ts" />
    <None Remove="ClientApp\src\app\graph\graph.module.ts" />
    <None Remove="ClientApp\src\app\geoprocessing\geoprocessing.component.html" />
    <None Remove="ClientApp\src\app\geoprocessing\geoprocessing.component.ts" />
    <None Remove="ClientApp\src\app\fetch-data\fetch-data.component.html" />
    <None Remove="ClientApp\src\app\fetch-data\fetch-data.component.ts" />
    <None Remove="ClientApp\src\app\counter\counter.component.html" />
    <None Remove="ClientApp\src\app\counter\counter.component.ts" />
    <None Remove="ClientApp\src\app\movie\containers\movie\movie.component.ts" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\models\tamuaddress.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\tamugeocode.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\models\tamuoutputgeocode.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\movie.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\movie\containers\movie\movie.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\movie\movie.module.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\movie\components\movie-list\movie-list.component.ts" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="ClientApp\src\app\graph\components\graph-list\" />
    <Folder Include="ClientApp\src\app\movie\" />
    <Folder Include="Interfaces\" />
    <Folder Include="Models\" />
    <Folder Include="Implementations\" />
    <Folder Include="ClientApp\src\app\movie\containers\" />
    <Folder Include="ClientApp\src\app\movie\components\" />
    <Folder Include="ClientApp\src\app\models\" />
    <Folder Include="ClientApp\src\app\shared\" />
    <Folder Include="ClientApp\src\app\state\" />
    <Folder Include="ClientApp\src\app\movie\state\" />
  </ItemGroup>
  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles-&gt;'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
